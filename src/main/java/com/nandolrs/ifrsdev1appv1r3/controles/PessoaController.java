package com.nandolrs.ifrsdev1appv1r3.controles;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.*;

import javax.persistence.Persistence;
import java.util.ArrayList;

@RestController // This means that this class is a Controller
@RequestMapping(path="/pessoa") // This means URL's start with /demo (after Application path)
public class PessoaController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private com.nandolrs.ifrsdev1appv1r3.repositorios.PessoaRepository repository;

   // javax.persistence.EntityManager

    @PostMapping(
            value = "incluir"
            ,consumes = {MediaType.APPLICATION_JSON_VALUE}
            ,produces = {MediaType.APPLICATION_JSON_VALUE}
    ) // Map ONLY POST Requests
    public @ResponseBody com.nandolrs.ifrsdev1appv1r3.dados.Pessoa Incluir (@RequestBody  com.nandolrs.ifrsdev1appv1r3.dados.Pessoa entidade) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        repository.save(entidade);

        return entidade;
    }


    @PostMapping(
            value = "incluirLote"
            ,consumes = {MediaType.APPLICATION_JSON_VALUE}
            ,produces = {MediaType.APPLICATION_JSON_VALUE}
    ) // Map ONLY POST Requests
    public @ResponseBody com.nandolrs.ifrsdev1appv1r3.dados.Pessoa[] IncluirLote (@RequestBody  com.nandolrs.ifrsdev1appv1r3.dados.Pessoa[] entidades) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Integer n = entidades.length;

        java.util.List<com.nandolrs.ifrsdev1appv1r3.dados.Pessoa> pessoas = new ArrayList<>();

        for(com.nandolrs.ifrsdev1appv1r3.dados.Pessoa p : entidades)
        {
            pessoas.add (p);
        }

        repository.saveAll(pessoas);

        return entidades;
    }


}
